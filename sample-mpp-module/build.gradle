/*
 * In order to build this module for LinuxX64 you should install libcurl4-openssl-dev package in your system
 */

setupMultiplatformLibrary(project)
setupAllTargetsWithDefaultSourceSets(project)

kotlin {
    targets {
//        fromPreset(presets.iosX64, 'darwinCommon')
        if (Target.shouldDefineTarget(project, Target.LINUX)) {
            linuxX64 {
                compilations.main.cinterops {
                    libcurl.includeDirs.headerFilterOnly '/usr/include', '/usr/include/x86_64-linux-gnu'
                }
            }
        }
        if (Target.shouldDefineTarget(project, Target.ALL_MACOS_HOSTED)) {
            def configureFrameworks = { target ->
                [target.binaries.getFramework('DEBUG'), target.binaries.getFramework('RELEASE')].each {
                    // Reaktive should be included into framework file, so we don't need to generate 2 framework files
                    it.export project(':reaktive')
                    it.transitiveExport = true
                    it.compilation.kotlinOptions.freeCompilerArgs += '-Xobjc-generics'
                }
            }
            if (Target.shouldDefineTarget(project, Target.IOS)) {
                configureFrameworks(ios32)
                configureFrameworks(ios64)
                configureFrameworks(iosSim)
            }
            if (Target.shouldDefineTarget(project, Target.MACOS)) {
                configureFrameworks(macosX64)
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                api project(':reaktive')
                implementation project(':reaktive-annotations')
                implementation project(':utils')
            }
        }
    }
}
